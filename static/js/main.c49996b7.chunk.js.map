{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","imgCanvas","document","createElement","style","display","body","appendChild","imgCanvasContext","getContext","newState","size","width","height","imgColor","imgSource","undefined","generateImage","state","e","Object","assign","this","target","value","updateImage","setState","fillStyle","fillRect","toDataURL","className","type","min","placeholder","onChange","onWidthChange","onHeightChange","onImgColorChange","src","alt","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wQAKqBA,E,kDACjB,WAAYC,GAAQ,IAAD,uBACf,cAAMA,IAEDC,UAAYC,SAASC,cAAc,UACxC,EAAKF,UAAUG,MAAMC,QAAU,OAC/BH,SAASI,KAAKC,YAAY,EAAKN,WAC/B,EAAKO,iBAAmB,EAAKP,UAAUQ,WAAW,MAElD,IAAMC,EAAW,CACbC,KAAM,CACFC,MAAO,KACPC,OAAQ,KAEZC,SAAU,UACVC,eAAWC,GAdA,OAgBfN,EAASK,UAAY,EAAKE,cAAcP,GACxC,EAAKQ,MAAQR,EAjBE,E,iDAoBnB,SAAcS,GACV,IAAMT,EAAWU,OAAOC,OAAOC,KAAKJ,OACpCR,EAASC,KAAKC,MAAQO,EAAEI,OAAOC,MAC/BF,KAAKG,YAAYf,K,4BAGrB,SAAeS,GACX,IAAMT,EAAWU,OAAOC,OAAOC,KAAKJ,OACpCR,EAASC,KAAKE,OAASM,EAAEI,OAAOC,MAChCF,KAAKG,YAAYf,K,8BAGrB,SAAiBS,GACb,IAAMT,EAAWU,OAAOC,OAAOC,KAAKJ,OACpCR,EAASI,SAAWK,EAAEI,OAAOC,MAC7BF,KAAKG,YAAYf,K,yBAGrB,SAAYA,GACRA,EAASK,UAAYO,KAAKL,cAAcP,GACxCY,KAAKI,SAAShB,K,2BAGlB,SAAcQ,GACV,MAAKA,EAAMP,KAAKC,OACTM,EAAMP,KAAKC,MAAQ,IAClBM,EAAMP,KAAKE,QACZK,EAAMP,KAAKE,OAAS,IACnBK,EAAMJ,SAOd,OAJAQ,KAAKrB,UAAUW,MAAQM,EAAMP,KAAKC,MAClCU,KAAKrB,UAAUY,OAASK,EAAMP,KAAKE,OACnCS,KAAKd,iBAAiBmB,UAAYT,EAAMJ,SACxCQ,KAAKd,iBAAiBoB,SAAS,EAAG,EAAGN,KAAKrB,UAAUW,MAAOU,KAAKrB,UAAUY,QACnES,KAAKrB,UAAU4B,UAAU,e,oBAGpC,WAAU,IAAD,OACL,OACI,qBAAKC,UAAU,MAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,4BAAf,UACI,uBAAOC,KAAK,SAASC,IAAI,IAAIF,UAAU,eAAeG,YAAY,QAC9DT,MAAOF,KAAKJ,MAAMP,KAAKC,MAAOsB,SAAU,SAAAf,GAAC,OAAI,EAAKgB,cAAchB,MACpE,uBAAOY,KAAK,SAASC,IAAI,IAAIF,UAAU,eAAeG,YAAY,SAC9DT,MAAOF,KAAKJ,MAAMP,KAAKE,OAAQqB,SAAU,SAAAf,GAAC,OAAI,EAAKiB,eAAejB,MACtE,uBAAOY,KAAK,QAAQD,UAAU,kCAC1BN,MAAOF,KAAKJ,MAAMJ,SAAUoB,SAAU,SAAAf,GAAC,OAAI,EAAKkB,iBAAiBlB,MACrE,uBAAOY,KAAK,OAAOD,UAAU,8BAA8BG,YAAY,QACnET,MAAOF,KAAKJ,MAAMJ,SAAUoB,SAAU,SAAAf,GAAC,OAAI,EAAKkB,iBAAiBlB,SAEzE,qBAAKW,UAAU,eAAeQ,IAAKhB,KAAKJ,MAAMH,UAAWwB,IAAI,mB,GAzEhDC,aCOlBC,EAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJlD,SAASmD,eAAe,SAM5BZ,M","file":"static/js/main.c49996b7.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/js/bootstrap.min\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.imgCanvas = document.createElement(\"canvas\");\n        this.imgCanvas.style.display = \"none\";\n        document.body.appendChild(this.imgCanvas);\n        this.imgCanvasContext = this.imgCanvas.getContext(\"2d\");\n\n        const newState = {\n            size: {\n                width: 1280,\n                height: 720\n            },\n            imgColor: \"#42a5f5\",\n            imgSource: undefined\n        };\n        newState.imgSource = this.generateImage(newState);\n        this.state = newState;\n    }\n\n    onWidthChange(e) {\n        const newState = Object.assign(this.state);\n        newState.size.width = e.target.value;\n        this.updateImage(newState);\n    }\n\n    onHeightChange(e) {\n        const newState = Object.assign(this.state);\n        newState.size.height = e.target.value;\n        this.updateImage(newState);\n    }\n\n    onImgColorChange(e) {\n        const newState = Object.assign(this.state);\n        newState.imgColor = e.target.value;\n        this.updateImage(newState);\n    }\n\n    updateImage(newState) {\n        newState.imgSource = this.generateImage(newState);\n        this.setState(newState);\n    }\n\n    generateImage(state) {\n        if (!state.size.width\n            || state.size.width < 0\n            || !state.size.height\n            || state.size.height < 0\n            || !state.imgColor) {\n            return;\n        }\n        this.imgCanvas.width = state.size.width;\n        this.imgCanvas.height = state.size.height;\n        this.imgCanvasContext.fillStyle = state.imgColor;\n        this.imgCanvasContext.fillRect(0, 0, this.imgCanvas.width, this.imgCanvas.height);\n        return this.imgCanvas.toDataURL(\"image/png\");\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"container my-3\">\n                    <div className=\"top-menu input-group mb-3\">\n                        <input type=\"number\" min=\"0\" className=\"form-control\" placeholder=\"Width\"\n                            value={this.state.size.width} onChange={e => this.onWidthChange(e)}/>\n                        <input type=\"number\" min=\"0\" className=\"form-control\" placeholder=\"Height\"\n                            value={this.state.size.height} onChange={e => this.onHeightChange(e)}/>\n                        <input type=\"color\" className=\"form-control form-control-color\"\n                            value={this.state.imgColor} onChange={e => this.onImgColorChange(e)}/>\n                        <input type=\"text\" className=\"form-control font-monospace\" placeholder=\"Color\"\n                            value={this.state.imgColor} onChange={e => this.onImgColorChange(e)}/>\n                    </div>\n                    <img className=\"result-image\" src={this.state.imgSource} alt=\"Image\"/>\n                </div>\n            </div>\n        );\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}